package com.Erycton.Util;import java.text.SimpleDateFormat;import java.util.Date;import com.Erycton.Data.ResultBean;public class Util {		// 改行コード取得(環境依存の為)	public static String GetSeparator(){		String crlf = System.getProperty("line.separator");		System.out.println(crlf);		return crlf;	}		// 対戦結果変換(数値 → 文字)	public String ConvertResult(ResultBean resultBean){		String res = null;				switch(resultBean.getResult()){			case 0: res = Const.WIN; break;			case 1: res = Const.LOSE; break;			case 2: res = Const.CUT; break;		}		return res;	}		// 日付取得(yyyy/MM/dd)	public String getDate(String str){				// 現在時刻でDateオブジェクト作成.		Date now = new Date(System.currentTimeMillis());		// 年/月/日/時/分/秒/曜日のフォーマット作成.		SimpleDateFormat sdf_now = new SimpleDateFormat(Const.df);		// Date → フォーマットに嵌める → toString() → "/"でsplitして格納. 		String str_now[] = ((sdf_now.format(now)).toString().split("/"));		// 結果格納変数	    String res = null;	    	    // 引数に応じて項目を渡す.	    switch(str){	    	case Const.YEAR: res = str_now[0]; break;	    	case Const.MONTH: res = str_now[1]; break;	    	case Const.DAY: res = str_now[2]; break;	    	case Const.WEEK: res = str_now[3]; break;	    	case Const.HOUR: res = str_now[4]; break;	    	case Const.MINUTE: res = str_now[5]; break;	    	case Const.SECOND: res = str_now[6]; break;	    }	    		return res;	}		// nullチェック	public boolean isNull(String str) {		boolean bl = false;		if (str.equals(null) || str == null || str.equals(Const.strnull) || str.equals(Const.str_null)){			bl = false;		} else {			bl = true;		}				return bl;	}	// 数値チェック	public static boolean isNumric(String str) {		boolean bl = false;		char chr = Const.zero;		for (int i = 0; i < str.length(); i++) {			chr = str.charAt(i);			if (chr < Const.zero || chr > Const.nine) {				return bl;			}else{				bl = true;			}		}		return bl;	}	// 数値範囲チェック	public boolean isRange(Integer num, Integer rng_sml, Integer rng_big) {		boolean bl = false;		if ( rng_big >= num && num >= rng_sml) {			bl = true;		}else{			bl = false;		}		return bl;	}	// 対戦結果チェック	public Integer isResult(boolean win, boolean lose, boolean cut) {		// 0 - win		// 1 - lose		// 2 - cut		Integer num = 2;		if ( win == true				&& lose == false				&& cut  == false ){			num =  0;		} else if ( lose == true				&& win   == false				&& cut   == false ){			num =  1;		} else {			num =  2;		}				return num;	}}